version: "3.8"

services:
  website:
    container_name: sample-website
    image: esmann.azurecr.io/samples/web:latest
    build:
      context: ./src/web
      dockerfile: Dockerfile
    ports:
      - "80:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
    #volumes:
    #  - website-volume:/dapr
    #  - redis-volume:/redis
    #networks:
    #  - default
    network_mode: bridge
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 1GB

  website-dapr:
    image: "daprio/daprd:1.0.0-rc.1"
    command:
      [
        "./daprd",
        "-app-id",
        "website",
        "-app-port",
        "80",
        "-dapr-http-port",
        "3500",
        "-config",
        "/dapr/config.yaml",
        "-components-path",
        "/dapr",
      ]
    volumes:
      - website-volume:/dapr
    depends_on:
      - website
    #network_mode: "service:website"
    #networks:
    #  - default
    network_mode: bridge
    env_file:
      - .env
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2GB

  api:
    container_name: sample-api
    image: esmann.azurecr.io/samples/api:latest
    build:
      context: ./src/api
      dockerfile: Dockerfile
    expose:
      - 5000
    #ports:
    #  - "5000:5000"
    depends_on:
      - db
    #networks:
    #  - default
    network_mode: bridge
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
    volumes:
      - api-volume:/dapr
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 1GB

  #api-dapr:
  #  image: "daprio/daprd:1.0.0-rc.1"
  #  command:
  #    [
  #      "./daprd",
  #      "-app-id",
  #      "api",
  #      "-app-port",
  #      "5000",
  #      "-dapr-http-port",
  #      "3500",
  #      "-config",
  #      "/dapr/config.yaml",
  #      "-components-path",
  #      "/dapr",
  #    ]
  #  volumes:
  #    - api-volume:/dapr
  #  depends_on:
  #    - api
  #  network_mode: "service:api"
  #  env_file:
  #    - .env
  #  deploy:
  #    resources:
  #      limits:
  #        cpus: "1"
  #        memory: 2GB
  #
  ############################
  # Redis state store
  ############################
  redis:
    image: "redis:alpine"
    #command: ["redis-server", "/redis/redis.conf"]
    command: ["redis-server"]
    ports:
      - "6379:6379"
    volumes:
      - redis-volume:/redis
    #- ./redis.conf:/usr/local/etc/redis/redis.conf
    #networks:
    #  - default
    network_mode: bridge
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: 1GB
  ############################
  # SQL Server 2019
  ############################
  db:
    image: "mcr.microsoft.com/mssql/server"
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Qwerty12"
      ACCEPT_EULA: "Y"
    #networks:
    #  - default
    network_mode: bridge
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2GB

#networks:
#  default:

volumes:
  #website-volume:
  #api-volume:
  #redis-volume:
  website-volume:
    driver: azure_file
    driver_opts:
      share_name: websitefileshare
      storage_account_name: dockerplaygound
  api-volume:
    driver: azure_file
    driver_opts:
      share_name: apifileshare
      storage_account_name: dockerplaygound
  redis-volume:
    driver: azure_file
    driver_opts:
      share_name: redisfileshare
      storage_account_name: dockerplaygound
