version: "3.8"

services:
  website:
    container_name: sample_website
    image: esmann.azurecr.io/samples/web:latest
    build:
      context: ./src/web
      dockerfile: Dockerfile
    ports:
      - "80:80"
      #- "443:5003"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      #- ASPNETCORE_URLS=https://+:5003;http://+:5002
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=password1
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    volumes:
      #- ~/.aspnet/https:/https:ro
      - "redis-volume:/redis"
      - "website-volume:/dapr"
    #network_mode: "bridge"

  website_dapr:
    image: "daprio/daprd:1.0.0-rc.1"
    command:
      [
        "./daprd",
        "-app-id",
        "website",
        "-app-port",
        "80",
        "-dapr-http-port",
        "3500",
        "-config",
        "/dapr/config.yaml",
        "-components-path",
        "/dapr",
      ]
    volumes:
      - "website-volume:/dapr"
    depends_on:
      - website
      - redis
    network_mode: "service:website"
    #network_mode: "bridge"
    env_file:
      - .env

  api:
    container_name: sample_api
    image: esmann.azurecr.io/samples/api:latest
    build:
      context: ./src/api
      dockerfile: Dockerfile
    expose:
      - 5000
    ports:
      - "5000:5000"
    depends_on:
      - db
    #network_mode: "bridge"
    volumes:
      - "api-volume:/dapr"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000

  api_dapr:
    image: "daprio/daprd:1.0.0-rc.1"
    command:
      [
        "./daprd",
        "-app-id",
        "api",
        "-app-port",
        "5000",
        "-dapr-http-port",
        "3500",
        "-config",
        "/dapr/config.yaml",
        "-components-path",
        "/dapr",
      ]
    volumes:
      - "api-volume:/dapr"
      #- "./components/local:/dapr"
      #- "./components/config.yaml:/dapr/config.yaml"
    depends_on:
      - api
      - redis
    network_mode: "service:api"
    #network_mode: "bridge"
    env_file:
      - .env

  ############################
  # Redis state store
  ############################
  redis:
    image: "redis:alpine"
    command: ["redis-server", "/redis/redis.conf"]
    ports:
      - "6379:6379"
    volumes:
      - "redis-volume:/redis"
      #- ./redis.conf:/usr/local/etc/redis/redis.conf
    #network_mode: "bridge"

  ############################
  # SQL Server 2019
  ############################
  db:
    image: "mcr.microsoft.com/mssql/server"
    ports:
      - 1433:1433
    environment:
      SA_PASSWORD: "Qwerty12"
      ACCEPT_EULA: "Y"
    #network_mode: "bridge"

volumes:
  website-volume:
  api-volume:
  redis-volume:
